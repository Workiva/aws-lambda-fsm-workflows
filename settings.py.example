# Copyright 2016-2020 Workiva Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# used to dictate the primary location for metrics
# valid services = cloudwatch
PRIMARY_METRICS_SOURCE = 'arn:partition:cloudwatch:testing:account:aws-lambda-fsm'
SECONDARY_METRICS_SOURCE = None  # NOT SUPPORTED YET

# used to dictate the primary location for caching
# valid services = elasticache (memcache), elasticache (redis), dynamodb
PRIMARY_CACHE_SOURCE = 'arn:partition:elasticache:testing:account:cluster:aws-lambda-fsm1'
SECONDARY_CACHE_SOURCE = 'arn:partition:elasticache:testing:account:cluster:aws-lambda-fsm2'

# used to dictate the primary location for event dispatch
# valid services = kinesis, dynamodb, sns, sqs
PRIMARY_STREAM_SOURCE = 'arn:partition:kinesis:testing:account:stream/aws-lambda-fsm'
SECONDARY_STREAM_SOURCE = 'arn:partition:dynamodb:testing:account:table/aws-lambda-fsm.stream'

# used to dictate the primary location for checkpointing
# valid services = dynamodb
PRIMARY_CHECKPOINT_SOURCE = 'arn:partition:dynamodb:testing:account:table/aws-lambda-fsm.checkpoint'
SECONDARY_CHECKPOINT_SOURCE = None  # NOT SUPPORTED YET

# used to dictate the primary location for retries
# valid services = dynamodb, kinesis, sns, sqs
PRIMARY_RETRY_SOURCE = 'arn:partition:dynamodb:testing:account:table/aws-lambda-fsm.retries'
SECONDARY_RETRY_SOURCE = 'arn:partition:kinesis:testing:account:stream/aws-lambda-fsm'

# used to dictate the primary location for environment storage
# valid services = dynamodb
PRIMARY_ENVIRONMENT_SOURCE = 'arn:partition:dynamodb:testing:account:table/aws-lambda-fsm'
SECONDARY_ENVIRONMENT_SOURCE = None  # NOT SUPPORTED YET

# stores SQS arn->QueueUrl mappings as an optimization to avoid
# going on the wire for data that rarely changes (ever?)
SQS_URLS = {}

# stores Elasticache arn->endpoint mappings as an optimization to avoid
# going on the wire for data that never changes
ELASTICACHE_ENDPOINTS = {}

# stores Elasticache arn->password mappings
ELASTICACHE_PASSWORDS = {}

AWS_CHAOS = {}
ENDPOINTS = {}
BOTO3_CLIENT_ADDITIONAL_KWARGS = {}

try:
    import settingslocal
except ImportError:
    settingslocal = None

if settingslocal:
    for setting in dir(settingslocal):
        globals()[setting.upper()] = getattr(settingslocal, setting)
